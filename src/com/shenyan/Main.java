package com.shenyan;import javax.crypto.Cipher;import javax.crypto.spec.IvParameterSpec;import javax.crypto.spec.SecretKeySpec;public class Main {    /**     * 加密     *     * @param sSrc     * @param aesKey     * @param aesIv     * @return 加密后的字符串     * @throws Exception     */    public static String Encrypt(String sSrc, String aesKey, String aesIv) throws Exception {        // 判断Key是否为16位        if (aesKey.length() != 16) {            return null;        }        byte[] raw = aesKey.getBytes();        SecretKeySpec skeySpec = new SecretKeySpec(raw, "AES");        Cipher cipher = Cipher.getInstance("AES/CBC/PKCS5Padding");// "算法/模式/补码方式"        IvParameterSpec iv = new IvParameterSpec(aesIv.getBytes());// 使用CBC模式，需要一个向量iv，可增加加密算法的强度        cipher.init(Cipher.ENCRYPT_MODE, skeySpec, iv);        byte[] encrypted = cipher.doFinal(sSrc.getBytes());        return new String(Base64.encode(encrypted, Base64.DEFAULT));// 此处使用BASE64做转码功能，同时能起到2次加密的作用。    }    /**     * 解密     *     * @param sSrc     * @param aesKey     * @param aesIv     * @return 解密后的字符串     * @throws Exception     */    public static String Decrypt(String sSrc, String aesKey, String aesIv) throws Exception {        try {            // 判断Key是否为16位            if (aesKey.length() != 16) {                //  System.out.print("Key长度不是16位");                return null;            }            byte[] raw = aesKey.getBytes("UTF-8");            SecretKeySpec skeySpec = new SecretKeySpec(raw, "AES");            Cipher cipher = Cipher.getInstance("AES/CBC/PKCS5Padding");            IvParameterSpec iv = new IvParameterSpec(aesIv.getBytes());            cipher.init(Cipher.DECRYPT_MODE, skeySpec, iv);            byte[] encrypted1 = Base64.decode(sSrc, Base64.DEFAULT);            try {                byte[] original = cipher.doFinal(encrypted1);                return new String(original);            } catch (Exception e) {                //System.out.println(e.toString());                return null;            }        } catch (Exception ex) {            //System.out.println(ex.toString());            return null;        }    }    public static void main(String[] args) {        // write your code here        String key = "5c33tE2ah*4sM5cs";        String iv = "e@45*t8bzsUFdg9s";        String jsonString = "{\"phoneNumber\":\"1571577****\",\"newPassword\":\"shenshen55\",\"verifyCode\":\"818415\",\"phoneInfo\":{\"identification\":2.0631581149064007e+31,\"platform\":\"pc\",\"model\":\"1\",\"version\":\"1\",\"networkType\":\"Wifi\",\"resolution\":\"1920X1080\"}}";        String aa = "";        try {            aa = Main.Encrypt(jsonString, key, iv);        } catch (Exception e) {            e.printStackTrace();        }        System.out.println(aa);    }}